{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ecommerce-reactjs3/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nimport { detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\nexport class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.handleDetail = id => {\n      //let tempProducts = [...this.state.products];\n      const product = this.state.products.find(item => item.id === id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      const productS = this.state.products.find(item => item.id === id);\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(product);\n      tempProducts[index];\n      product.inCart = true;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...this.state.products, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\nexport const ProductConsumer = ProductContext.Consumer;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ecommerce-reactjs3/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","setProducts","tempProducts","forEach","item","singleItem","setState","handleDetail","id","product","find","addToCart","productS","index","indexOf","inCart","price","total","console","log","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,QAA5B;AACA,SAAQC,aAAR,QAA4B,QAA5B;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB;AAEA,OAAO,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAE3CM,KAF2C,GAEnC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJL,MAAAA,aAAa,EAAEA;AAFX,KAFmC;;AAAA,SAW3CM,WAX2C,GAW7B,MAAM;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACAR,MAAAA,aAAa,CAACS,OAAd,CAAsBC,IAAI,IAAI;AAC1B,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;AACAF,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAf;AACH,OAHD;AAIA,WAAKC,QAAL,CAAc,MAAM;AAChB,eAAO;AAACN,UAAAA,QAAQ,EAAEE;AAAX,SAAP;AACH,OAFD;AAGH,KApB0C;;AAAA,SAsB3CK,YAtB2C,GAsB3BC,EAAD,IAAQ;AACnB;AACA,YAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,IAApB,CAAyBN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAA7C,CAAhB;AACA,WAAKF,QAAL,CAAc,MAAM;AAChB,eAAO;AAACX,UAAAA,aAAa,EAAEc;AAAhB,SAAP;AACH,OAFD;AAGH,KA5B0C;;AAAA,SA8B3CE,SA9B2C,GA8B9BH,EAAD,IAAQ;AAChB,YAAMI,QAAQ,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBU,IAApB,CAAyBN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAA7C,CAAjB;AACA,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWC,QAAf,CAAnB;AACA,YAAMa,KAAK,GAAGX,YAAY,CAACY,OAAb,CAAqBL,OAArB,CAAd;AACAP,MAAAA,YAAY,CAACW,KAAD,CAAZ;AACAJ,MAAAA,OAAO,CAACM,MAAR,GAAiB,IAAjB;AACA,YAAMC,KAAK,GAAGP,OAAO,CAACO,KAAtB;AACAP,MAAAA,OAAO,CAACQ,KAAR,GAAgBD,KAAhB;AAEA,WAAKV,QAAL,CACI,MAAM;AACN,eAAO;AAACN,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBS,OAAzB;AAAX,SAAP;AACH,OAHD,EAII,MAAM;AACFS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AACH,OANL;AAOH,KA9C0C;AAAA;;AAO3CqB,EAAAA,iBAAiB,GAAG;AAChB,SAAKnB,WAAL;AACH;;AAuCDoB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,MAAA,KAAK,EACD,EACI,GAAG,KAAKtB,KADZ;AAEIQ,QAAAA,YAAY,EAAE,KAAKA,YAFvB;AAGII,QAAAA,SAAS,EAAE,KAAKA;AAHpB,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASK,KAAKW,KAAL,CAAWC,QAThB,CADJ;AAcH;;AA/D0C;AAkE/C,OAAO,MAAMC,eAAe,GAAG5B,cAAc,CAAC6B,QAAvC","sourcesContent":["import React, {Component} from 'react';\nimport {storeProducts} from \"./data\"\nimport {detailProduct} from \"./data\"\n\nconst ProductContext = React.createContext()\n\nexport class ProductProvider extends Component {\n\n    state = {\n        products: [],\n        detailProduct: detailProduct\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item}\n            tempProducts = [...tempProducts, singleItem]\n        })\n        this.setState(() => {\n            return {products: tempProducts}\n        })\n    }\n\n    handleDetail = (id) => {\n        //let tempProducts = [...this.state.products];\n        const product = this.state.products.find(item => item.id === id);\n        this.setState(() => {\n            return {detailProduct: product}\n        })\n    }\n\n    addToCart = (id) => {\n        const productS = this.state.products.find(item => item.id === id);\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(product);\n        tempProducts[index]\n        product.inCart = true;\n        const price = product.price;\n        product.total = price;\n\n        this.setState(\n            () => {\n            return {products: [...this.state.products, product]}\n        },\n            () => {\n                console.log(this.state)\n            }    )\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider\n                value={\n                    {\n                        ...this.state,\n                        handleDetail: this.handleDetail,\n                        addToCart: this.addToCart\n                    }\n                }\n            >\n                {this.props.children}\n\n            </ProductContext.Provider>\n        );\n    }\n}\n\nexport const ProductConsumer = ProductContext.Consumer;\n\n"]},"metadata":{},"sourceType":"module"}